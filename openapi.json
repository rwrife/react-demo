{
  "openapi": "3.0.1",
  "info": {
    "title": "Data Extraction Service - FXS REST API",
    "description": "Explore the capabilities of the Data Extraction Service through its REST API. This document helps you easily process and extract data.",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkID=206977",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://dxs.dev.hls.azure.com"
    }
  ],
  "paths": {
    "/app-data/containers": {
      "get": {
        "tags": [
          "AppData"
        ],
        "summary": "Get the metadata of the available containers",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app-data/containers/{containerName}/blob-metadata": {
      "get": {
        "tags": [
          "AppData"
        ],
        "summary": "Get the metadata for the blobs in the specified container",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IKvItemProperties"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IKvItemProperties"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IKvItemProperties"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app-data/containers/{containerName}/blobs/{blobName}": {
      "get": {
        "tags": [
          "AppData"
        ],
        "summary": "Get blob",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blobName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AppData"
        ],
        "summary": "Upload blob",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blobName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The blob data.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/JToken"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/JToken"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/JToken"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/JToken"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppData"
        ],
        "summary": "Updates the blob.",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blobName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The new blob data.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/JToken"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/JToken"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/JToken"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/JToken"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppData"
        ],
        "summary": "Delete blob",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blobName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "412": {
            "description": "Client Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app-data/containers/{containerName}/blobs/{blobName}/{versionId}": {
      "get": {
        "tags": [
          "AppData"
        ],
        "summary": "Get blob version",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blobName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppData"
        ],
        "summary": "Delete blob version",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blobName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "412": {
            "description": "Client Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app-data/containers/{containerName}": {
      "delete": {
        "tags": [
          "AppData"
        ],
        "summary": "Delete container",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/deid": {
      "post": {
        "tags": [
          "Deid"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeidRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeidRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeidRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeidRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeidResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeidResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeidResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/deid/multishot": {
      "post": {
        "tags": [
          "Deid"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MultishotExample"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultishotExample"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MultishotExample"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MultishotExample"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MultishotExampleDeid"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultishotExampleDeid"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultishotExampleDeid"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dxi/encryption-key": {
      "get": {
        "tags": [
          "DxiData"
        ],
        "summary": "Get the public-key for encryption.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the public key for encryption.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPublicKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPublicKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPublicKeyResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dxi/chat": {
      "post": {
        "tags": [
          "DxiData"
        ],
        "summary": "Call chat gpt",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChatPlaygroundRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatPlaygroundRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatPlaygroundRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChatPlaygroundRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChatGptResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatGptResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatGptResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dxi/{containerName}": {
      "get": {
        "tags": [
          "DxiData"
        ],
        "summary": "Get the available blob names",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DxiData"
        ],
        "summary": "Upload blob",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The blob data.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/JToken"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/JToken"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/JToken"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/JToken"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dxi/{containerName}/{blobName}": {
      "get": {
        "tags": [
          "DxiData"
        ],
        "summary": "Get blob value",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blobName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DxiData"
        ],
        "summary": "Delete blob",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blobName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DxiData"
        ],
        "summary": "Updates the blob.",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blobName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The new blob data.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/JToken"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/JToken"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/JToken"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/JToken"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dxi/globaldata/customers": {
      "get": {
        "tags": [
          "DxiData"
        ],
        "summary": "Get customers",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DxiData"
        ],
        "summary": "Replace customers.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The customers object.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "412": {
            "description": "Client Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DxiData"
        ],
        "summary": "Add a new customer.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The new customer object.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "412": {
            "description": "Client Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dxi/globaldata/customers/{customerId}": {
      "put": {
        "tags": [
          "DxiData"
        ],
        "summary": "Update a customer.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "The ID of the customer to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated customer object.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "412": {
            "description": "Client Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DxiData"
        ],
        "summary": "Delete a customer.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "The ID of the customer to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "412": {
            "description": "Client Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/data-collection/containers": {
      "get": {
        "tags": [
          "DxiData"
        ],
        "summary": "Get the available data collection container names (dataOwners)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/data-collection/blobs/{dataOwner}": {
      "get": {
        "tags": [
          "DxiData"
        ],
        "summary": "Get the data collection blobs for the specified dataOwner (container)",
        "parameters": [
          {
            "name": "dataOwner",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DxsBlobProperties"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DxsBlobProperties"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DxsBlobProperties"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/data-collection/blob/{dataOwner}/{blobName}": {
      "get": {
        "tags": [
          "DxiData"
        ],
        "summary": "Download the specified data collection blob for a given dataOwner",
        "parameters": [
          {
            "name": "dataOwner",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blobName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dxsai/{r1}": {
      "get": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/fxs/{r1}": {
      "get": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/dxsai/{r1}/{r2}": {
      "get": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/fxs/{r1}/{r2}": {
      "get": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/dxsai/{r1}/{r2}/{r3}": {
      "get": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r3",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r3",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/fxs/{r1}/{r2}/{r3}": {
      "get": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r3",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r3",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/dxsai/{r1}/{r2}/{r3}/{r4}": {
      "get": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r3",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r4",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r3",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r4",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/fxs/{r1}/{r2}/{r3}/{r4}": {
      "get": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r3",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r4",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r3",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r4",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/dxsai/{r1}/{r2}/{r3}/{r4}/{r5}": {
      "get": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r3",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r4",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r5",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r3",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r4",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r5",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/fxs/{r1}/{r2}/{r3}/{r4}/{r5}": {
      "get": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r3",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r4",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r5",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Dxsai"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "r1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r3",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r4",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "r5",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/extraction": {
      "post": {
        "tags": [
          "Extraction"
        ],
        "summary": "Extracts the relevant information from the transcribed data using the provided schema and specified extractor configuration",
        "description": "Use this endpoint to perform data extraction. Ensure the provided AI endpoint is in the allowlist.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "<br>**Required Properties**\r\n<br>- __schemaData__: Flowsheet schema in JSON format, it can be either in V1 or V2.\r\n<br>- __transcript__: A transcript containing various patient information.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NursingExtractRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NursingExtractRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NursingExtractRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NursingExtractRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - The extraction was successful"
          },
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NursingResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NursingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NursingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request is malformed or missing required parameters."
          },
          "401": {
            "description": "Unauthorized - The request requires authentication."
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server."
          }
        }
      }
    },
    "/segments": {
      "post": {
        "tags": [
          "Extraction"
        ],
        "summary": "Segments the provided transcribed data using the provided schema and specified extractor configuration",
        "description": "Use this endpoint to perform data segmentation. Ensure the provided AI endpoint is in the allowlist.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A JSON object containing a NursingSegmentRequest.\r\n            <br>**Required Properties**<br>- __transcript__: A transcript text to be segmented.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NursingSegmentRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NursingSegmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NursingSegmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NursingSegmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - The segmentation was successful"
          },
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NursingResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NursingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NursingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request is malformed or missing required parameters."
          },
          "401": {
            "description": "Unauthorized - The request requires authentication."
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server."
          }
        }
      }
    },
    "/extraction-with-segments": {
      "post": {
        "tags": [
          "Extraction"
        ],
        "summary": "Extract the relevant information from the provided segments using the provided schema and specified extractor configuration",
        "description": "Use this endpoint to perform data segmentation. Ensure the provided AI endpoint is in the allowlist.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "<br>**Required Properties**\r\n<br>- __schemaData__: Flowsheet schema in JSON format, it can be either in V1 or V2.\r\n<br>- __segments__: Array of strings containing the transcript segments to be extracted.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NursingExtractWithSegmentsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NursingExtractWithSegmentsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NursingExtractWithSegmentsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NursingExtractWithSegmentsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - Extraction with provided segments was successful"
          },
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NursingResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NursingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NursingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request is malformed or missing required parameters."
          },
          "401": {
            "description": "Unauthorized - The request requires authentication."
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server."
          }
        }
      }
    },
    "/semantic-search-results": {
      "post": {
        "tags": [
          "Extraction"
        ],
        "summary": "Performs semantic search based on provided transcribed data using the provided schema and specified extractor configuration.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "<br>**Required Properties**\r\n<br>- __schemaData__: Flowsheet schema in JSON format, it can be either in V1 or V2.\r\n<br>- __transcript__: A transcript containing various patient information.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NursingSemanticSearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NursingSemanticSearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NursingSemanticSearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NursingSemanticSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - The semantic search was successful"
          },
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NursingResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NursingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NursingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request is malformed or missing required parameters."
          },
          "401": {
            "description": "Unauthorized - The request requires authentication."
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server."
          }
        }
      }
    },
    "/multishot/containers": {
      "get": {
        "tags": [
          "MultishotData"
        ],
        "summary": "Get the available container names (dataOwners)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/multishot/examples/{dataOwner}": {
      "get": {
        "tags": [
          "MultishotData"
        ],
        "summary": "Get the multishot examples for the specified dataOwner (container)",
        "parameters": [
          {
            "name": "dataOwner",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IKvItemProperties"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IKvItemProperties"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IKvItemProperties"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/multishot/examples/{dataOwner}/{dataNamespace}/properties": {
      "get": {
        "tags": [
          "MultishotData"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "dataOwner",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataNamespace",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IKvItemProperties"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IKvItemProperties"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IKvItemProperties"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/multishot/examples/{dataOwner}/{dataNamespace}": {
      "get": {
        "tags": [
          "MultishotData"
        ],
        "summary": "Download the multishot examples for a specific dataOwner and dataNamespace",
        "parameters": [
          {
            "name": "dataOwner",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataNamespace",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MultishotExamplesData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultishotExamplesData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultishotExamplesData"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MultishotData"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "dataOwner",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataNamespace",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MultishotExample"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MultishotExample"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MultishotExample"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MultishotExample"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IKvItemProperties"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IKvItemProperties"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IKvItemProperties"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "412": {
            "description": "Client Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MultishotData"
        ],
        "summary": "Get the embeddings for the specified dataOwner (container)",
        "parameters": [
          {
            "name": "dataOwner",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataNamespace",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/multishot/examples": {
      "post": {
        "tags": [
          "MultishotData"
        ],
        "summary": "Upload multishot examples to blob storage",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "<br>NursingMultishotExamplesUploadRequest\r\n<br>request.GetObservationSet() returns an ObservationSet from both V1 and V2 Nursing schemas",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NursingMultishotExamplesUploadRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NursingMultishotExamplesUploadRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NursingMultishotExamplesUploadRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NursingMultishotExamplesUploadRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UploadMultishotResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadMultishotResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadMultishotResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/multishot/examples/{dataOwner}/{dataNamespace}/versions": {
      "get": {
        "tags": [
          "MultishotData"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "dataOwner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataNamespace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/IKvItemProperties"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/IKvItemProperties"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/IKvItemProperties"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/multishot/examples/{dataOwner}/{dataNamespace}/versions/{version}": {
      "get": {
        "tags": [
          "MultishotData"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "dataOwner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataNamespace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MultishotExamplesData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultishotExamplesData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultishotExamplesData"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/oxs/{path}": {
      "get": {
        "tags": [
          "Oxs"
        ],
        "summary": "Proxies incoming GET or POST requests to the configured OXS endpoint.",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "The path to append to the OXS endpoint.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Oxs"
        ],
        "summary": "Proxies incoming GET or POST requests to the configured OXS endpoint.",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "The path to append to the OXS endpoint.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/schema-preprocessing/containers": {
      "get": {
        "tags": [
          "SchemaPreprocessing"
        ],
        "summary": "Get the available container names (dataOwners)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/schema-preprocessing/schema-metadata/{dataOwner}/{dataNamespace}": {
      "get": {
        "tags": [
          "SchemaPreprocessing"
        ],
        "summary": "Download the metadata of the schema for a specific dataOwner and dataNamespace",
        "parameters": [
          {
            "name": "dataOwner",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataNamespace",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DxsBlobProperties"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DxsBlobProperties"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DxsBlobProperties"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/schema-preprocessing/schema-metadata/{dataOwner}": {
      "get": {
        "tags": [
          "SchemaPreprocessing"
        ],
        "summary": "Get the schemas for the specified dataOwner (container)",
        "parameters": [
          {
            "name": "dataOwner",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DxsBlobProperties"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DxsBlobProperties"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DxsBlobProperties"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/schema-preprocessing/schema/{dataOwner}/{dataNamespace}": {
      "get": {
        "tags": [
          "SchemaPreprocessing"
        ],
        "summary": "Download the schema for a specific dataOwner and dataNamespace",
        "parameters": [
          {
            "name": "dataOwner",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataNamespace",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SchemaPreprocessing"
        ],
        "summary": "Delete the schema for the specified dataOwner (container) and dataNamespace",
        "parameters": [
          {
            "name": "dataOwner",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataNamespace",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/examples-preprocessing": {
      "post": {
        "tags": [
          "SchemaPreprocessing"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExamplesPreprocessingRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExamplesPreprocessingRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExamplesPreprocessingRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExamplesPreprocessingRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExamplesPreprocessingResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExamplesPreprocessingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExamplesPreprocessingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/schema-preprocessing/schema": {
      "post": {
        "tags": [
          "SchemaPreprocessing"
        ],
        "summary": "Upload a schema to blob storage and generate embeddings for it",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "<br>NursingSchemaUploadRequest",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NursingSchemaUploadRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NursingSchemaUploadRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NursingSchemaUploadRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NursingSchemaUploadRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NursingSchemaUploadResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NursingSchemaUploadResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NursingSchemaUploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/schema-preprocessing/embeddings-metadata/{dataOwner}": {
      "get": {
        "tags": [
          "SchemaPreprocessing"
        ],
        "summary": "Get the embeddings for the specified dataOwner (container)",
        "parameters": [
          {
            "name": "dataOwner",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DxsBlobProperties"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DxsBlobProperties"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DxsBlobProperties"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/schema-preprocessing/embeddings-metadata/{dataOwner}/{dataNamespace}": {
      "get": {
        "tags": [
          "SchemaPreprocessing"
        ],
        "summary": "Get the embeddings for the specified dataOwner (container)",
        "parameters": [
          {
            "name": "dataOwner",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataNamespace",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DxsBlobProperties"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DxsBlobProperties"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DxsBlobProperties"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/schema-preprocessing/embeddings/{dataOwner}/{dataNamespace}": {
      "get": {
        "tags": [
          "SchemaPreprocessing"
        ],
        "summary": "Download the embeddings for the specified dataOwner (container)",
        "parameters": [
          {
            "name": "dataOwner",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataNamespace",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmbeddingsData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbeddingsData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbeddingsData"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SchemaPreprocessing"
        ],
        "summary": "Delete the embeddings for the specified dataOwner (container) and dataNamespace",
        "parameters": [
          {
            "name": "dataOwner",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataNamespace",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/schema-preprocessing/convert-schema": {
      "post": {
        "tags": [
          "SchemaPreprocessing"
        ],
        "summary": "Convert from v2 to v1 schema(internal format)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "NursingSchemaConvertRequest",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NursingSchemaConvertRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NursingSchemaConvertRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NursingSchemaConvertRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NursingSchemaConvertRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Gets the health status of the application.",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The request was successful.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatusResponse"
                },
                "example": {
                  "build": null,
                  "version": "0.829.0.0",
                  "fxsVersion": null,
                  "oxsVersion": null,
                  "status": {
                    "entries": {
                      "service0": {
                        "data": {},
                        "description": "service0 unhealthy.",
                        "duration": "2024-08-07T00:00:01.3140000+00:00",
                        "exception": null,
                        "status": 0,
                        "tags": []
                      },
                      "service1": {
                        "data": {},
                        "description": "service1 is healthy.",
                        "duration": "2024-08-07T00:00:00.6520000+00:00",
                        "exception": null,
                        "status": 2,
                        "tags": []
                      }
                    },
                    "status": 0,
                    "totalDuration": "2024-08-07T00:00:01.3140000+00:00"
                  },
                  "envVars": {}
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatusResponse"
                },
                "example": {
                  "build": null,
                  "version": "0.829.0.0",
                  "fxsVersion": null,
                  "oxsVersion": null,
                  "status": {
                    "entries": {
                      "service0": {
                        "data": {},
                        "description": "service0 unhealthy.",
                        "duration": "2024-08-07T00:00:01.3140000+00:00",
                        "exception": null,
                        "status": 0,
                        "tags": []
                      },
                      "service1": {
                        "data": {},
                        "description": "service1 is healthy.",
                        "duration": "2024-08-07T00:00:00.6520000+00:00",
                        "exception": null,
                        "status": 2,
                        "tags": []
                      }
                    },
                    "status": 0,
                    "totalDuration": "2024-08-07T00:00:01.3140000+00:00"
                  },
                  "envVars": {}
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatusResponse"
                },
                "example": {
                  "build": null,
                  "version": "0.829.0.0",
                  "fxsVersion": null,
                  "oxsVersion": null,
                  "status": {
                    "entries": {
                      "service0": {
                        "data": {},
                        "description": "service0 unhealthy.",
                        "duration": "2024-08-07T00:00:01.3140000+00:00",
                        "exception": null,
                        "status": 0,
                        "tags": []
                      },
                      "service1": {
                        "data": {},
                        "description": "service1 is healthy.",
                        "duration": "2024-08-07T00:00:00.6520000+00:00",
                        "exception": null,
                        "status": 2,
                        "tags": []
                      }
                    },
                    "status": 0,
                    "totalDuration": "2024-08-07T00:00:01.3140000+00:00"
                  },
                  "envVars": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - A health check on the server has failed, see response body json",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatusResponse"
                },
                "example": {
                  "build": null,
                  "version": "0.829.0.0",
                  "fxsVersion": null,
                  "oxsVersion": null,
                  "status": {
                    "entries": {
                      "service0": {
                        "data": {},
                        "description": "service0 unhealthy.",
                        "duration": "2024-08-07T00:00:00.2890000+00:00",
                        "exception": null,
                        "status": 0,
                        "tags": []
                      },
                      "service1": {
                        "data": {},
                        "description": "service1 is healthy.",
                        "duration": "2024-08-07T00:00:01.8520000+00:00",
                        "exception": null,
                        "status": 2,
                        "tags": []
                      }
                    },
                    "status": 0,
                    "totalDuration": "2024-08-07T00:00:01.8520000+00:00"
                  },
                  "envVars": {}
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatusResponse"
                },
                "example": {
                  "build": null,
                  "version": "0.829.0.0",
                  "fxsVersion": null,
                  "oxsVersion": null,
                  "status": {
                    "entries": {
                      "service0": {
                        "data": {},
                        "description": "service0 unhealthy.",
                        "duration": "2024-08-07T00:00:00.2890000+00:00",
                        "exception": null,
                        "status": 0,
                        "tags": []
                      },
                      "service1": {
                        "data": {},
                        "description": "service1 is healthy.",
                        "duration": "2024-08-07T00:00:01.8520000+00:00",
                        "exception": null,
                        "status": 2,
                        "tags": []
                      }
                    },
                    "status": 0,
                    "totalDuration": "2024-08-07T00:00:01.8520000+00:00"
                  },
                  "envVars": {}
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatusResponse"
                },
                "example": {
                  "build": null,
                  "version": "0.829.0.0",
                  "fxsVersion": null,
                  "oxsVersion": null,
                  "status": {
                    "entries": {
                      "service0": {
                        "data": {},
                        "description": "service0 unhealthy.",
                        "duration": "2024-08-07T00:00:00.2890000+00:00",
                        "exception": null,
                        "status": 0,
                        "tags": []
                      },
                      "service1": {
                        "data": {},
                        "description": "service1 is healthy.",
                        "duration": "2024-08-07T00:00:01.8520000+00:00",
                        "exception": null,
                        "status": 2,
                        "tags": []
                      }
                    },
                    "status": 0,
                    "totalDuration": "2024-08-07T00:00:01.8520000+00:00"
                  },
                  "envVars": {}
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Report the build version.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/healthz": {
      "head": {
        "tags": [
          "Status"
        ],
        "summary": "Checks if the healthz service is running.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The service is running."
          },
          "500": {
            "description": "Internal Server Error - The service is not running."
          }
        }
      }
    },
    "/otelTest": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MethodAttributes": {
        "enum": [
          0,
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          16,
          32,
          64,
          128,
          256,
          256,
          512,
          1024,
          2048,
          4096,
          8192,
          16384,
          32768,
          53248
        ],
        "type": "integer",
        "format": "int32"
      },
      "MethodImplAttributes": {
        "enum": [
          0,
          0,
          1,
          2,
          3,
          3,
          4,
          4,
          8,
          16,
          32,
          64,
          128,
          256,
          512,
          4096,
          65535
        ],
        "type": "integer",
        "format": "int32"
      },
      "CallingConventions": {
        "enum": [
          1,
          2,
          3,
          32,
          64
        ],
        "type": "integer",
        "format": "int32"
      },
      "IntPtr": {
        "type": "object",
        "additionalProperties": false
      },
      "RuntimeMethodHandle": {
        "type": "object",
        "properties": {
          "value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntPtr"
              }
            ],
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MemberTypes": {
        "enum": [
          1,
          2,
          4,
          8,
          16,
          32,
          64,
          128,
          191
        ],
        "type": "integer",
        "format": "int32"
      },
      "ModuleHandle": {
        "type": "object",
        "properties": {
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeTypedArgument": {
        "type": "object",
        "properties": {
          "argumentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MemberInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MemberTypes"
              }
            ],
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "reflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Module"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeNamedArgument": {
        "type": "object",
        "properties": {
          "memberInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MemberInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "typedValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomAttributeTypedArgument"
              }
            ],
            "readOnly": true
          },
          "memberName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isField": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeData": {
        "type": "object",
        "properties": {
          "attributeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "constructor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConstructorInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "constructorArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeTypedArgument"
            },
            "nullable": true,
            "readOnly": true
          },
          "namedArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeNamedArgument"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Module": {
        "type": "object",
        "properties": {
          "assembly": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Assembly"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "fullyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "moduleVersionId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "scopeName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "moduleHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ModuleHandle"
              }
            ],
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ConstructorInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MemberTypes"
              }
            ],
            "readOnly": true
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodAttributes"
              }
            ],
            "readOnly": true
          },
          "methodImplementationFlags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodImplAttributes"
              }
            ],
            "readOnly": true
          },
          "callingConvention": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CallingConventions"
              }
            ],
            "readOnly": true
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RuntimeMethodHandle"
              }
            ],
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "reflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Module"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "EventAttributes": {
        "enum": [
          0,
          512,
          1024,
          1024
        ],
        "type": "integer",
        "format": "int32"
      },
      "ParameterAttributes": {
        "enum": [
          0,
          1,
          2,
          4,
          8,
          16,
          4096,
          8192,
          16384,
          32768,
          61440
        ],
        "type": "integer",
        "format": "int32"
      },
      "ParameterInfo": {
        "type": "object",
        "properties": {
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ParameterAttributes"
              }
            ],
            "readOnly": true
          },
          "member": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MemberInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "parameterType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isIn": {
            "type": "boolean",
            "readOnly": true
          },
          "isLcid": {
            "type": "boolean",
            "readOnly": true
          },
          "isOptional": {
            "type": "boolean",
            "readOnly": true
          },
          "isOut": {
            "type": "boolean",
            "readOnly": true
          },
          "isRetval": {
            "type": "boolean",
            "readOnly": true
          },
          "defaultValue": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true,
            "readOnly": true
          },
          "rawDefaultValue": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true,
            "readOnly": true
          },
          "hasDefaultValue": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ICustomAttributeProvider": {
        "type": "object",
        "additionalProperties": false
      },
      "MethodInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MemberTypes"
              }
            ],
            "readOnly": true
          },
          "returnParameter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ParameterInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "returnType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "returnTypeCustomAttributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ICustomAttributeProvider"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodAttributes"
              }
            ],
            "readOnly": true
          },
          "methodImplementationFlags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodImplAttributes"
              }
            ],
            "readOnly": true
          },
          "callingConvention": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CallingConventions"
              }
            ],
            "readOnly": true
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RuntimeMethodHandle"
              }
            ],
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "reflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Module"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "EventInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MemberTypes"
              }
            ],
            "readOnly": true
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventAttributes"
              }
            ],
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "addMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "removeMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "raiseMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "isMulticast": {
            "type": "boolean",
            "readOnly": true
          },
          "eventHandlerType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "reflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Module"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FieldAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          16,
          32,
          64,
          128,
          256,
          512,
          1024,
          4096,
          8192,
          32768,
          38144
        ],
        "type": "integer",
        "format": "int32"
      },
      "RuntimeFieldHandle": {
        "type": "object",
        "properties": {
          "value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntPtr"
              }
            ],
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FieldInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MemberTypes"
              }
            ],
            "readOnly": true
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FieldAttributes"
              }
            ],
            "readOnly": true
          },
          "fieldType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "isInitOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isLiteral": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotSerialized": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "isPinvokeImpl": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "fieldHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RuntimeFieldHandle"
              }
            ],
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "reflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Module"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PropertyAttributes": {
        "enum": [
          0,
          512,
          1024,
          4096,
          8192,
          16384,
          32768,
          62464
        ],
        "type": "integer",
        "format": "int32"
      },
      "PropertyInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MemberTypes"
              }
            ],
            "readOnly": true
          },
          "propertyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PropertyAttributes"
              }
            ],
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "canRead": {
            "type": "boolean",
            "readOnly": true
          },
          "canWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "getMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "setMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "reflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Module"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericParameterAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          8,
          16,
          28
        ],
        "type": "integer",
        "format": "int32"
      },
      "TypeAttributes": {
        "enum": [
          0,
          0,
          0,
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          7,
          8,
          16,
          24,
          32,
          32,
          128,
          256,
          1024,
          2048,
          4096,
          8192,
          16384,
          65536,
          131072,
          196608,
          196608,
          262144,
          264192,
          1048576,
          12582912
        ],
        "type": "integer",
        "format": "int32"
      },
      "LayoutKind": {
        "enum": [
          0,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "StructLayoutAttribute": {
        "type": "object",
        "properties": {
          "value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LayoutKind"
              }
            ],
            "readOnly": true
          },
          "typeId": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RuntimeTypeHandle": {
        "type": "object",
        "properties": {
          "value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntPtr"
              }
            ],
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TypeInfo": {
        "type": "object",
        "properties": {
          "genericTypeParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredConstructors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstructorInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MethodInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredNestedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "implementedInterfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MemberTypes"
              }
            ],
            "readOnly": true
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Assembly"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Module"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "declaringMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodBase"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "reflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "underlyingSystemType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "isFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnmanagedFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GenericParameterAttributes"
              }
            ],
            "readOnly": true
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeAttributes"
              }
            ],
            "readOnly": true
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StructLayoutAttribute"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "typeInitializer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConstructorInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "typeHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RuntimeTypeHandle"
              }
            ],
            "readOnly": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SecurityRuleSet": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Assembly": {
        "type": "object",
        "properties": {
          "definedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "exportedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "codeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "entryPoint": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "imageRuntimeVersion": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isDynamic": {
            "type": "boolean",
            "readOnly": true
          },
          "location": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "reflectionOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "isFullyTrusted": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "escapedCodeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "manifestModule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Module"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Module"
            },
            "nullable": true,
            "readOnly": true
          },
          "globalAssemblyCache": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "hostContext": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "securityRuleSet": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SecurityRuleSet"
              }
            ],
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Type": {
        "type": "object",
        "properties": {
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MemberTypes"
              }
            ],
            "readOnly": true
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Assembly"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Module"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "declaringMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodBase"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "reflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "underlyingSystemType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "isFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnmanagedFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GenericParameterAttributes"
              }
            ],
            "readOnly": true
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeAttributes"
              }
            ],
            "readOnly": true
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StructLayoutAttribute"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "typeInitializer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConstructorInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "typeHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RuntimeTypeHandle"
              }
            ],
            "readOnly": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MethodBase": {
        "type": "object",
        "properties": {
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodAttributes"
              }
            ],
            "readOnly": true
          },
          "methodImplementationFlags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodImplAttributes"
              }
            ],
            "readOnly": true
          },
          "callingConvention": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CallingConventions"
              }
            ],
            "readOnly": true
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RuntimeMethodHandle"
              }
            ],
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MemberTypes"
              }
            ],
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "reflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Module"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Exception": {
        "type": "object",
        "properties": {
          "targetSite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodBase"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true,
            "readOnly": true
          },
          "innerException": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Exception"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "helpLink": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "hResult": {
            "type": "integer",
            "format": "int32"
          },
          "stackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FilteredErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "supportReference": {
            "type": "string",
            "nullable": true
          },
          "exception": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Exception"
              }
            ],
            "nullable": true
          },
          "genevaQueryUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeSpan": {
        "type": "object",
        "properties": {
          "ticks": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "days": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hours": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "milliseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "microseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "nanoseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "minutes": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "seconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalDays": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalHours": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMilliseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMicroseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalNanoseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMinutes": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalSeconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IKvItemProperties": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "age": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeSpan"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "eTag": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "versionId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "JToken": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/JToken"
        }
      },
      "DeidRequest": {
        "type": "object",
        "properties": {
          "inputText": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "DeidResponse": {
        "type": "object",
        "properties": {
          "outputText": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ObservationTypeId": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "type": "integer",
        "format": "int32"
      },
      "MultishotExample": {
        "type": "object",
        "properties": {
          "observationId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "testUuid": {
            "type": "string",
            "nullable": true
          },
          "testSetId": {
            "type": "string",
            "nullable": true
          },
          "observationSetId": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "displayGroup": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "displayNameSynonyms": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "typeId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObservationTypeId"
              }
            ]
          },
          "listItems": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "transcript": {
            "type": "string",
            "nullable": true
          },
          "provenance": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "timeStamp": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MultishotExampleDeid": {
        "type": "object",
        "properties": {
          "replacedTranscript": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "replacedProvenance": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "containsPI": {
            "type": "boolean",
            "description": "",
            "readOnly": true
          },
          "observationId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "testUuid": {
            "type": "string",
            "nullable": true
          },
          "testSetId": {
            "type": "string",
            "nullable": true
          },
          "observationSetId": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "displayGroup": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "displayNameSynonyms": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "typeId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObservationTypeId"
              }
            ]
          },
          "listItems": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "transcript": {
            "type": "string",
            "nullable": true
          },
          "provenance": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "timeStamp": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "GetPublicKeyResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChatGptMessage": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GptOptions": {
        "type": "object",
        "properties": {
          "temperature": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "maxTokens": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "topP": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "frequencyPenalty": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "presencePenalty": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "resultsPerPrompt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "logprobs": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bestOf": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "chatModel": {
            "type": "string",
            "nullable": true
          },
          "embeddingModel": {
            "type": "string",
            "nullable": true
          },
          "endpoint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChatPlaygroundRequest": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatGptMessage"
            },
            "nullable": true
          },
          "gptOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GptOptions"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChatGptResult": {
        "type": "object",
        "properties": {
          "gptResponseText": {
            "type": "string",
            "nullable": true
          },
          "elapsedTime": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "usage": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "error": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerNamespace": {
        "type": "object",
        "properties": {
          "internalId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "aliases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "ehrType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ehrVersion": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Customer": {
        "type": "object",
        "properties": {
          "internalId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "aliases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "optOutOfDataCollection": {
            "type": "boolean",
            "readOnly": true
          },
          "namespaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerNamespace"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DxsBlobProperties": {
        "type": "object",
        "properties": {
          "collectionName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "key": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isCached": {
            "type": "boolean",
            "readOnly": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "NursingContext": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "sessionId": {
            "type": "string",
            "nullable": true
          },
          "testUuid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BlobStorageDataCollectorConfig": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "nullable": true
          },
          "resourceGroupName": {
            "type": "string",
            "nullable": true
          },
          "storageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IDatabase": {
        "type": "object",
        "properties": {
          "database": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BlobStorageEmbeddingsProviderConfig": {
        "type": "object",
        "properties": {
          "appDataStorageUrl": {
            "type": "string",
            "nullable": true
          },
          "embeddingModel": {
            "type": "string",
            "nullable": true
          },
          "embeddingGenerationVersion": {
            "type": "string",
            "nullable": true
          },
          "redisDatabase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IDatabase"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BlobStorageAccuracyProviderConfig": {
        "type": "object",
        "properties": {
          "storageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HttpStatusCode": {
        "enum": [
          100,
          101,
          102,
          103,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          226,
          300,
          300,
          301,
          301,
          302,
          302,
          303,
          303,
          304,
          305,
          306,
          307,
          307,
          308,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          421,
          422,
          422,
          423,
          424,
          426,
          428,
          429,
          431,
          451,
          500,
          501,
          502,
          503,
          504,
          505,
          506,
          507,
          508,
          510,
          511
        ],
        "type": "integer",
        "format": "int32"
      },
      "BasicRetryConfig": {
        "type": "object",
        "properties": {
          "maxRetryCount": {
            "type": "integer",
            "format": "int32"
          },
          "minRetryDelay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeSpan"
              }
            ]
          },
          "maxRetryDelay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeSpan"
              }
            ]
          },
          "maxTotalRetryTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeSpan"
              }
            ]
          },
          "useExponentialBackoff": {
            "type": "boolean"
          },
          "retryableStatusCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HttpStatusCode"
            },
            "nullable": true
          },
          "retryableExceptionTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueueProcessingOrder": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "SlidingWindowRateLimiterOptions": {
        "type": "object",
        "properties": {
          "window": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeSpan"
              }
            ]
          },
          "segmentsPerWindow": {
            "type": "integer",
            "format": "int32"
          },
          "autoReplenishment": {
            "type": "boolean"
          },
          "permitLimit": {
            "type": "integer",
            "format": "int32"
          },
          "queueProcessingOrder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueueProcessingOrder"
              }
            ]
          },
          "queueLimit": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ExtractorConfig": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "stream": {
            "type": "boolean"
          },
          "extractorName": {
            "type": "string",
            "nullable": true
          },
          "aiEndpoint": {
            "type": "string",
            "nullable": true
          },
          "aiApiKey": {
            "type": "string",
            "nullable": true
          },
          "dxsFxsEndpoint": {
            "type": "string",
            "nullable": true
          },
          "gptOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GptOptions"
              }
            ],
            "nullable": true
          },
          "blobStorageDataCollectorConfig": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlobStorageDataCollectorConfig"
              }
            ],
            "nullable": true
          },
          "blobStorageEmbeddingsProviderConfig": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlobStorageEmbeddingsProviderConfig"
              }
            ],
            "nullable": true
          },
          "blobStorageAccuracyProviderConfig": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlobStorageAccuracyProviderConfig"
              }
            ],
            "nullable": true
          },
          "basicRetryConfig": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BasicRetryConfig"
              }
            ],
            "nullable": true
          },
          "embeddingsServiceLimiter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SlidingWindowRateLimiterOptions"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TranscriptContext": {
        "type": "object",
        "properties": {
          "referenceDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "patientMetadata": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NursingExtractRequest": {
        "required": [
          "schemaData",
          "transcript"
        ],
        "type": "object",
        "properties": {
          "schemaData": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "transcript": {
            "type": "string"
          },
          "context": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NursingContext"
              }
            ],
            "nullable": true
          },
          "segments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "extractorConfig": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtractorConfig"
              }
            ],
            "nullable": true
          },
          "transcriptContext": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscriptContext"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TranscriptSpan": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NursingResponseObservation": {
        "type": "object",
        "properties": {
          "observationId": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "validationStatus": {
            "type": "string",
            "nullable": true
          },
          "subStatus": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "displayGroup": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "provenance": {
            "type": "string",
            "nullable": true
          },
          "templateId": {
            "type": "string",
            "nullable": true
          },
          "transcriptSpans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranscriptSpan"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TranscriptMetadata": {
        "type": "object",
        "properties": {
          "transcript": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "segmentIndex": {
            "type": "integer",
            "format": "int32"
          },
          "segmentCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CandidateObservation": {
        "type": "object",
        "properties": {
          "observationId": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "displayGroup": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "displayNameSynonyms": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "typeId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObservationTypeId"
              }
            ]
          },
          "listValueSetId": {
            "type": "string",
            "nullable": true
          },
          "listItems": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "relevanceScore": {
            "type": "number",
            "format": "double"
          },
          "transcriptMetadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscriptMetadata"
              }
            ],
            "nullable": true
          },
          "segment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExtractionMetadataObservation": {
        "type": "object",
        "properties": {
          "observationId": {
            "type": "string",
            "nullable": true
          },
          "observationValue": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "transcriptMetadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscriptMetadata"
              }
            ],
            "nullable": true
          },
          "displayGroup": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "provenance": {
            "type": "string",
            "nullable": true
          },
          "templateId": {
            "type": "string",
            "nullable": true
          },
          "isValid": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ExtractionMetadata": {
        "type": "object",
        "properties": {
          "segments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "candidateObservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CandidateObservation"
            },
            "nullable": true
          },
          "observations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtractionMetadataObservation"
            },
            "nullable": true
          },
          "invalidObservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtractionMetadataObservation"
            },
            "nullable": true
          },
          "segmentationResult": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "segmentExtractionResults": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "totalUsage": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "fxsResult": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NursingResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "nullable": true
          },
          "elapsedTime": {
            "type": "integer",
            "format": "int32"
          },
          "dataOwner": {
            "type": "string",
            "nullable": true
          },
          "dataNamespace": {
            "type": "string",
            "nullable": true
          },
          "transcript": {
            "type": "string",
            "nullable": true
          },
          "rawTranscript": {
            "type": "string",
            "nullable": true
          },
          "annotatedTranscript": {
            "type": "string",
            "nullable": true
          },
          "validatedObservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NursingResponseObservation"
            },
            "nullable": true
          },
          "verboseOutput": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "extractionMetadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtractionMetadata"
              }
            ],
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NursingSegmentRequest": {
        "required": [
          "transcript"
        ],
        "type": "object",
        "properties": {
          "transcript": {
            "type": "string"
          },
          "schemaData": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "context": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NursingContext"
              }
            ],
            "nullable": true
          },
          "segments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "extractorConfig": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtractorConfig"
              }
            ],
            "nullable": true
          },
          "transcriptContext": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscriptContext"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NursingExtractWithSegmentsRequest": {
        "required": [
          "schemaData",
          "segments"
        ],
        "type": "object",
        "properties": {
          "schemaData": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "segments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "transcript": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NursingContext"
              }
            ],
            "nullable": true
          },
          "extractorConfig": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtractorConfig"
              }
            ],
            "nullable": true
          },
          "transcriptContext": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscriptContext"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NursingSemanticSearchRequest": {
        "required": [
          "schemaData",
          "transcript"
        ],
        "type": "object",
        "properties": {
          "transcript": {
            "type": "string"
          },
          "schemaData": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "context": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NursingContext"
              }
            ],
            "nullable": true
          },
          "segments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "extractorConfig": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtractorConfig"
              }
            ],
            "nullable": true
          },
          "transcriptContext": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscriptContext"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MultishotExamplesData": {
        "type": "object",
        "properties": {
          "containerName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ownerId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "namespace": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "multishotExamples": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultishotExample"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "NursingMultishotExamplesUploadRequest": {
        "required": [
          "dataNamespace",
          "dataOwner",
          "multishotExamplesData"
        ],
        "type": "object",
        "properties": {
          "dataOwner": {
            "type": "string"
          },
          "dataNamespace": {
            "type": "string"
          },
          "multishotExamplesData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "schemaData": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "transcript": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NursingContext"
              }
            ],
            "nullable": true
          },
          "segments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "extractorConfig": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtractorConfig"
              }
            ],
            "nullable": true
          },
          "transcriptContext": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscriptContext"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UploadMultishotResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IKvItemProperties"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExamplesPreprocessingRequest": {
        "type": "object",
        "properties": {
          "dataOwner": {
            "type": "string",
            "nullable": true
          },
          "dataNamespace": {
            "type": "string",
            "nullable": true
          },
          "examplesDatasetBlobName": {
            "type": "string",
            "nullable": true
          },
          "schemaData": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "transcript": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NursingContext"
              }
            ],
            "nullable": true
          },
          "segments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "extractorConfig": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtractorConfig"
              }
            ],
            "nullable": true
          },
          "transcriptContext": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscriptContext"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmbeddingGenerationStats": {
        "type": "object",
        "properties": {
          "countGenerated": {
            "type": "integer",
            "format": "int32"
          },
          "countStored": {
            "type": "integer",
            "format": "int32"
          },
          "countCached": {
            "type": "integer",
            "format": "int32"
          },
          "elapsedTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeSpan"
              }
            ]
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "observationIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExamplesPreprocessingResponse": {
        "type": "object",
        "properties": {
          "examplesCount": {
            "type": "integer",
            "format": "int32"
          },
          "embeddingGenerationStats": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmbeddingGenerationStats"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NursingSchemaUploadRequest": {
        "required": [
          "schemaData"
        ],
        "type": "object",
        "properties": {
          "schemaData": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "transcript": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NursingContext"
              }
            ],
            "nullable": true
          },
          "segments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "extractorConfig": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtractorConfig"
              }
            ],
            "nullable": true
          },
          "transcriptContext": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscriptContext"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NursingSchemaUploadResponse": {
        "type": "object",
        "properties": {
          "importTotalRows": {
            "type": "integer",
            "format": "int32"
          },
          "importUniqueRows": {
            "type": "integer",
            "format": "int32"
          },
          "importIncompleteRows": {
            "type": "integer",
            "format": "int32"
          },
          "embeddingGenerationStats": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmbeddingGenerationStats"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemoryRecordExtract": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "additionalMetadata": {
            "type": "string",
            "nullable": true
          },
          "vector": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SingleReadOnlySpan": {
        "type": "object",
        "properties": {
          "length": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isEmpty": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SingleReadOnlyMemory": {
        "type": "object",
        "properties": {
          "length": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isEmpty": {
            "type": "boolean",
            "readOnly": true
          },
          "span": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SingleReadOnlySpan"
              }
            ],
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MemoryRecordMetadata": {
        "type": "object",
        "properties": {
          "is_reference": {
            "type": "boolean",
            "readOnly": true
          },
          "external_source_name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "text": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "additional_metadata": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MemoryRecord": {
        "type": "object",
        "properties": {
          "embedding": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SingleReadOnlyMemory"
              }
            ],
            "readOnly": true
          },
          "metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MemoryRecordMetadata"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmbeddingsData": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "containerName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "embeddingModel": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "embeddingGeneratorName": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "embeddingExtracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemoryRecordExtract"
            },
            "nullable": true,
            "readOnly": true
          },
          "memoryRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemoryRecord"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "NursingSchemaConvertRequest": {
        "required": [
          "schemaData"
        ],
        "type": "object",
        "properties": {
          "schemaData": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          }
        },
        "additionalProperties": false
      },
      "HealthStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "HealthReportEntry": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "duration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeSpan"
              }
            ],
            "readOnly": true
          },
          "exception": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Exception"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HealthStatus"
              }
            ],
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "HealthReport": {
        "type": "object",
        "properties": {
          "entries": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/HealthReportEntry"
            },
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HealthStatus"
              }
            ],
            "readOnly": true
          },
          "totalDuration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeSpan"
              }
            ],
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetStatusResponse": {
        "type": "object",
        "properties": {
          "build": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "fxsVersion": {
            "type": "string",
            "nullable": true
          },
          "oxsVersion": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HealthReport"
              }
            ],
            "nullable": true
          },
          "envVars": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OtelRequest": {
        "type": "object",
        "properties": {
          "test": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Enter token: Bearer {token}",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}